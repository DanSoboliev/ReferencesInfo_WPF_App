<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApp1.Theme">
    <local:BrushToColorConverter x:Key="myBrushToColorConverter"/>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}"
           x:Key="MenuButtonTheme">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Property=Content}" VerticalAlignment="Center" Margin="30 0 30 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#22202f"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}"
           x:Key="TopMenuButtonTheme">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid Name="btn" Height="40" Margin="0 0 0 0">
                            <Border>
                                <Grid>
                                    <Label Content="{TemplateBinding Content}" Background="Transparent" FontSize="14"
                               VerticalAlignment="Center">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="#ababab"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" Value="true">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}, Path=IsPressed}" Value="true">
                                                        <Setter Property="Foreground" Value="#ababab"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}, Path=IsChecked}" Value="true">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <Label Content="{TemplateBinding Content}" Background="Transparent" Margin="-3 0 0 0" VerticalAlignment="Center" FontSize="14" FontWeight="Bold">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}, Path=IsChecked}" Value="true">
                                                        <DataTrigger.Setters>
                                                            <Setter Property="Effect">
                                                                <Setter.Value>
                                                                    <BlurEffect Radius="25"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger.Setters>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </Grid>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}, Path=IsPressed}" Value="true">
                                                <Setter Property="Margin" Value="0 1 0 0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="WindowControlButton">
        <Border Background="Transparent" Name="nborder">
            <TextBlock x:Name="ntext"
                Text="{TemplateBinding Content}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="Segoe MDL2 Assets" 
                Foreground="{TemplateBinding Foreground}"
                FontSize="{TemplateBinding FontSize}"
                />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=nborder}" Value="True">
                <Setter TargetName="ntext" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Background}"/>
                <Setter TargetName="ntext" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Color="{Binding Converter={StaticResource myBrushToColorConverter}, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Foreground}"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="nborder" Property="Background" Value="#2e2b45"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="MenuControlButton">
        <Border Name="nborder"
                Background="Transparent"
                BorderThickness="1"
                BorderBrush="#524f6e"
                Padding="10 5 10 5"
                Margin="20 0 20 0">
            <TextBlock
                Text="{TemplateBinding Content}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding Foreground}"
                FontSize="{TemplateBinding FontSize}"
                />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=nborder}" Value="True">
                <Setter TargetName="nborder" Property="Background" Value="#524f6e"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type CheckBox}"
           x:Key="MenuButtonTheme2">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Property=Content}" VerticalAlignment="Center" Margin="30 0 30 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#22202f"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
